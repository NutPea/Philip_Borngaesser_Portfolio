//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/OtherAssets/PlayerInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInput : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInput"",
    ""maps"": [
        {
            ""name"": ""Keyboard"",
            ""id"": ""c2026304-6b14-4e7c-bb8c-8a3a8e16dea2"",
            ""actions"": [
                {
                    ""name"": ""Horizontal"",
                    ""type"": ""Button"",
                    ""id"": ""53ebb662-defa-4627-80cb-81921e18c2ea"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Vertical"",
                    ""type"": ""Button"",
                    ""id"": ""f3b7bf66-e07d-46fb-a9e0-f920c1f049f0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseMovement"",
                    ""type"": ""Value"",
                    ""id"": ""2d905e6f-6a50-4b46-bbe8-825756a3fd54"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""DropEquipment"",
                    ""type"": ""Button"",
                    ""id"": ""e4785fab-740a-4ad6-8365-74ac93b9d76a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Reset"",
                    ""type"": ""Button"",
                    ""id"": ""9e140c85-e4e7-4903-a529-db6f3c0ea4be"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""6c30a3b9-471b-471a-a16d-25b11da51af4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Console"",
                    ""type"": ""Button"",
                    ""id"": ""3848833c-e560-4f83-8f59-9d981199b41c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PauseMenu"",
                    ""type"": ""Button"",
                    ""id"": ""b6d97506-bad6-4de5-82ee-67104eaba5cf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Continue"",
                    ""type"": ""Button"",
                    ""id"": ""9355c82e-2794-4728-94ea-7627407dc505"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""ae43fc09-e993-48f5-8f2d-0abbc9e7a17d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Separate"",
                    ""type"": ""Button"",
                    ""id"": ""2489ac43-1698-4c10-bef3-2c33b4bea4b5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Inventory"",
                    ""type"": ""Button"",
                    ""id"": ""dda1cdcc-1d19-4501-bdfe-7c8b2e28bf50"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Horizontal"",
                    ""id"": ""3f6444ab-a1a5-49f8-8cce-424e45625068"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Horizontal"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""78c401b4-88f4-4d0e-bb6d-d0be9d1cab00"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Horizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""1e96b755-65af-4984-aecb-9cdbcd617d1f"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Horizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""227df8b1-30f5-4515-a146-7e85010291d4"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Vertical"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""16cb708e-534e-48fe-890b-f269fdadca79"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Vertical"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""17106332-e571-463d-b06f-05dab2f4df28"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Vertical"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""e6120a17-d8c4-4e84-8c25-21762207d539"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a47549fc-2eb9-4587-9d9c-5d1355e6ff26"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DropEquipment"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8d12943e-35ff-40e4-ac0f-6c1e9ccd4cab"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Reset"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""24c2dd5b-e710-483d-857f-fb25c9b7c1dc"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""efb87070-244c-4221-84b3-1b196e419023"",
                    ""path"": ""<Keyboard>/f8"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Console"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d2817e38-c969-4bd8-aae8-e8ca81a47658"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PauseMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""108294e3-4d9c-4bb1-8736-a6ab3bd5362e"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Continue"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""05ae0d5b-e31d-4c06-bf89-1ef3d19cc681"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""66059e52-0b8e-4da7-bc5c-0ac7ecb449eb"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Separate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ea76ed31-bbe2-48f2-8d15-9c69766bb5a1"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Inventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Keyboard
        m_Keyboard = asset.FindActionMap("Keyboard", throwIfNotFound: true);
        m_Keyboard_Horizontal = m_Keyboard.FindAction("Horizontal", throwIfNotFound: true);
        m_Keyboard_Vertical = m_Keyboard.FindAction("Vertical", throwIfNotFound: true);
        m_Keyboard_MouseMovement = m_Keyboard.FindAction("MouseMovement", throwIfNotFound: true);
        m_Keyboard_DropEquipment = m_Keyboard.FindAction("DropEquipment", throwIfNotFound: true);
        m_Keyboard_Reset = m_Keyboard.FindAction("Reset", throwIfNotFound: true);
        m_Keyboard_Interact = m_Keyboard.FindAction("Interact", throwIfNotFound: true);
        m_Keyboard_Console = m_Keyboard.FindAction("Console", throwIfNotFound: true);
        m_Keyboard_PauseMenu = m_Keyboard.FindAction("PauseMenu", throwIfNotFound: true);
        m_Keyboard_Continue = m_Keyboard.FindAction("Continue", throwIfNotFound: true);
        m_Keyboard_Jump = m_Keyboard.FindAction("Jump", throwIfNotFound: true);
        m_Keyboard_Separate = m_Keyboard.FindAction("Separate", throwIfNotFound: true);
        m_Keyboard_Inventory = m_Keyboard.FindAction("Inventory", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Keyboard
    private readonly InputActionMap m_Keyboard;
    private IKeyboardActions m_KeyboardActionsCallbackInterface;
    private readonly InputAction m_Keyboard_Horizontal;
    private readonly InputAction m_Keyboard_Vertical;
    private readonly InputAction m_Keyboard_MouseMovement;
    private readonly InputAction m_Keyboard_DropEquipment;
    private readonly InputAction m_Keyboard_Reset;
    private readonly InputAction m_Keyboard_Interact;
    private readonly InputAction m_Keyboard_Console;
    private readonly InputAction m_Keyboard_PauseMenu;
    private readonly InputAction m_Keyboard_Continue;
    private readonly InputAction m_Keyboard_Jump;
    private readonly InputAction m_Keyboard_Separate;
    private readonly InputAction m_Keyboard_Inventory;
    public struct KeyboardActions
    {
        private @PlayerInput m_Wrapper;
        public KeyboardActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Horizontal => m_Wrapper.m_Keyboard_Horizontal;
        public InputAction @Vertical => m_Wrapper.m_Keyboard_Vertical;
        public InputAction @MouseMovement => m_Wrapper.m_Keyboard_MouseMovement;
        public InputAction @DropEquipment => m_Wrapper.m_Keyboard_DropEquipment;
        public InputAction @Reset => m_Wrapper.m_Keyboard_Reset;
        public InputAction @Interact => m_Wrapper.m_Keyboard_Interact;
        public InputAction @Console => m_Wrapper.m_Keyboard_Console;
        public InputAction @PauseMenu => m_Wrapper.m_Keyboard_PauseMenu;
        public InputAction @Continue => m_Wrapper.m_Keyboard_Continue;
        public InputAction @Jump => m_Wrapper.m_Keyboard_Jump;
        public InputAction @Separate => m_Wrapper.m_Keyboard_Separate;
        public InputAction @Inventory => m_Wrapper.m_Keyboard_Inventory;
        public InputActionMap Get() { return m_Wrapper.m_Keyboard; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(KeyboardActions set) { return set.Get(); }
        public void SetCallbacks(IKeyboardActions instance)
        {
            if (m_Wrapper.m_KeyboardActionsCallbackInterface != null)
            {
                @Horizontal.started -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnHorizontal;
                @Horizontal.performed -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnHorizontal;
                @Horizontal.canceled -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnHorizontal;
                @Vertical.started -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnVertical;
                @Vertical.performed -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnVertical;
                @Vertical.canceled -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnVertical;
                @MouseMovement.started -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnMouseMovement;
                @MouseMovement.performed -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnMouseMovement;
                @MouseMovement.canceled -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnMouseMovement;
                @DropEquipment.started -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnDropEquipment;
                @DropEquipment.performed -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnDropEquipment;
                @DropEquipment.canceled -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnDropEquipment;
                @Reset.started -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnReset;
                @Reset.performed -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnReset;
                @Reset.canceled -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnReset;
                @Interact.started -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnInteract;
                @Console.started -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnConsole;
                @Console.performed -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnConsole;
                @Console.canceled -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnConsole;
                @PauseMenu.started -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnPauseMenu;
                @PauseMenu.performed -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnPauseMenu;
                @PauseMenu.canceled -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnPauseMenu;
                @Continue.started -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnContinue;
                @Continue.performed -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnContinue;
                @Continue.canceled -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnContinue;
                @Jump.started -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnJump;
                @Separate.started -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnSeparate;
                @Separate.performed -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnSeparate;
                @Separate.canceled -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnSeparate;
                @Inventory.started -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnInventory;
                @Inventory.performed -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnInventory;
                @Inventory.canceled -= m_Wrapper.m_KeyboardActionsCallbackInterface.OnInventory;
            }
            m_Wrapper.m_KeyboardActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Horizontal.started += instance.OnHorizontal;
                @Horizontal.performed += instance.OnHorizontal;
                @Horizontal.canceled += instance.OnHorizontal;
                @Vertical.started += instance.OnVertical;
                @Vertical.performed += instance.OnVertical;
                @Vertical.canceled += instance.OnVertical;
                @MouseMovement.started += instance.OnMouseMovement;
                @MouseMovement.performed += instance.OnMouseMovement;
                @MouseMovement.canceled += instance.OnMouseMovement;
                @DropEquipment.started += instance.OnDropEquipment;
                @DropEquipment.performed += instance.OnDropEquipment;
                @DropEquipment.canceled += instance.OnDropEquipment;
                @Reset.started += instance.OnReset;
                @Reset.performed += instance.OnReset;
                @Reset.canceled += instance.OnReset;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @Console.started += instance.OnConsole;
                @Console.performed += instance.OnConsole;
                @Console.canceled += instance.OnConsole;
                @PauseMenu.started += instance.OnPauseMenu;
                @PauseMenu.performed += instance.OnPauseMenu;
                @PauseMenu.canceled += instance.OnPauseMenu;
                @Continue.started += instance.OnContinue;
                @Continue.performed += instance.OnContinue;
                @Continue.canceled += instance.OnContinue;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Separate.started += instance.OnSeparate;
                @Separate.performed += instance.OnSeparate;
                @Separate.canceled += instance.OnSeparate;
                @Inventory.started += instance.OnInventory;
                @Inventory.performed += instance.OnInventory;
                @Inventory.canceled += instance.OnInventory;
            }
        }
    }
    public KeyboardActions @Keyboard => new KeyboardActions(this);
    public interface IKeyboardActions
    {
        void OnHorizontal(InputAction.CallbackContext context);
        void OnVertical(InputAction.CallbackContext context);
        void OnMouseMovement(InputAction.CallbackContext context);
        void OnDropEquipment(InputAction.CallbackContext context);
        void OnReset(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnConsole(InputAction.CallbackContext context);
        void OnPauseMenu(InputAction.CallbackContext context);
        void OnContinue(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnSeparate(InputAction.CallbackContext context);
        void OnInventory(InputAction.CallbackContext context);
    }
}
